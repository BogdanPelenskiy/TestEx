// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id            String          @id @default(uuid())
  email         String          @unique
  password      String
  name          String?
  createdAt     DateTime        @default(now())
  updatedAt     DateTime        @updatedAt
  places        Place[]         @relation("UserPlaces")
  trips         Trip[]          @relation("UserTrips")
  Collaboration Collaboration[]
}

model Trip {
  id          String   @id @default(uuid())
  name        String
  startDate   DateTime
  endDate     DateTime
  createdById String
  createdBy   User     @relation("UserTrips", fields: [createdById], references: [id])

  // додай це:
  invites       Invite[]
  Collaboration Collaboration[]
}

model Place {
  id          String   @id @default(uuid())
  name        String
  description String?
  location    String?
  createdAt   DateTime @default(now())

  createdById String
  createdBy   User   @relation("UserPlaces", fields: [createdById], references: [id])
}

model Collaboration {
  id        String   @id @default(uuid())
  tripId    String
  trip      Trip     @relation(fields: [tripId], references: [id])
  userId    String
  user      User     @relation(fields: [userId], references: [id])
  role      String
  createdAt DateTime @default(now())

  @@unique([tripId, userId])
}

model Invite {
  id        String   @id @default(uuid())
  tripId    String
  trip      Trip     @relation(fields: [tripId], references: [id])
  email     String
  createdAt DateTime @default(now())
}
